# -----------------------------------------------------------------------------
# Multi-stage Dockerfile for NestJS Backend (biobank-backend)
# Centralized config: see config/containers.yaml
# -----------------------------------------------------------------------------

# --- Builder Stage ---
FROM node:18-alpine AS builder

WORKDIR /app

# Install dependencies
# Copy package.json and install dependencies using npm install
COPY ./backend/package.json ./
RUN npm install

# Copy source code
COPY ./backend .

# Build NestJS app
ARG SUPABASE_URL
ARG SUPABASE_SERVICE_ROLE_KEY
ARG NEO4J_URI
ARG NEO4J_USER
ARG NEO4J_PASSWORD
ARG API_KEY
ENV SUPABASE_URL=$SUPABASE_URL
ENV SUPABASE_SERVICE_ROLE_KEY=$SUPABASE_SERVICE_ROLE_KEY
ENV NEO4J_URI=$NEO4J_URI
ENV NEO4J_USER=$NEO4J_USER
ENV NEO4J_PASSWORD=$NEO4J_PASSWORD
ENV API_KEY=$API_KEY
RUN npm run build

# --- Production Stage ---
FROM node:18-alpine AS runner

WORKDIR /app

ENV NODE_ENV=production

# Copy only necessary files from builder
COPY --from=builder /app/dist ./dist
COPY --from=builder /app/node_modules ./node_modules
COPY --from=builder /app/package.json ./package.json

# Expose port (matches config/containers.yaml)
EXPOSE 4000

# Runtime env vars (injected at container start)
ENV SUPABASE_URL=${SUPABASE_URL}
ENV SUPABASE_SERVICE_ROLE_KEY=${SUPABASE_SERVICE_ROLE_KEY}
ENV NEO4J_URI=${NEO4J_URI}
ENV NEO4J_USER=${NEO4J_USER}
ENV NEO4J_PASSWORD=${NEO4J_PASSWORD}
ENV API_KEY=${API_KEY}

# Start NestJS in production mode
CMD ["node", "dist/main"]